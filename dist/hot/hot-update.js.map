{"version":3,"file":"hot/hot-update.js","mappings":";;;;;;;;;;;;AAAA;IAAA;IAuCA,CAAC;IApCG,oDAAkC,GAAlC,UAAmC,UAAe;QAC9C,IAAI,EAAE,GAAQ,IAAI,CAAC;QACnB,IAAI,kBAAkB,GAAG,EAAE,CAAC,YAAY,CAAC;QACzC,IAAM,cAAc,GAAG,kBAAkB,CAAC,OAAO,CAAC;QAClD,cAAc,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACjF,CAAC;IAED,6CAA2B,GAA3B;QACI,IAAI,EAAE,GAAQ,IAAI,CAAC;QACnB,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1B,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,6BAA6B,EAAE,CAAC,CAAC;QACtD,EAAE,CAAC,kCAAkC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QACrD,EAAE,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,+CAA6B,GAA7B;QACI,IAAI,oBAAoB,GAAG;;;;;;YAMvB,CAAC;QACL,OAAO,oBAAoB;IAC/B,CAAC;IAGD,4BAAU,GAAV;QACI,IAAI,EAAE,GAAQ,IAAI,CAAC;QACnB,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU,KAAU;YAC3D,IAAG,EAAE,CAAC,oBAAoB,EAAC;gBACvB,EAAE,CAAC,oBAAoB,EAAE,CAAC;aAC7B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,cAAC;AAAD,CAAC;AAED,iEAAe,OAAO,EAAC;;;;;;;;;UCzCvB","sources":["webpack://kore-web-sdk/./src/plugins/textToSpeech/BaseTTS.ts","webpack://kore-web-sdk/webpack/runtime/getFullHash"],"sourcesContent":["class BaseTTS {\r\n    hostInstance: any;\r\n\r\n    appendPickerHTMLtoChatWindowFooter(pickerHTML: any) {\r\n        let me: any = this;\r\n        let chatWindowInstance = me.hostInstance;\r\n        const _chatContainer = chatWindowInstance.chatEle;\r\n        _chatContainer.find('.kore-chat-footer .footerContainer').append(pickerHTML);\r\n    }\r\n\r\n    installTextToSpeechTemplate() {\r\n        let me: any = this;\r\n        let $ = me.hostInstance.$;\r\n        me.pickerHTML = $(me.getTextToSpeechTemplateString());\r\n        me.appendPickerHTMLtoChatWindowFooter(me.pickerHTML);\r\n        me.bindEvents();\r\n    }\r\n\r\n    getTextToSpeechTemplateString() {\r\n        var textToSpeechTemplate = '<div class=\"sdkFooterIcon ttspeakerDiv ttsOff\"> \\\r\n        <button class=\"ttspeaker\" title=\"Talk to speak\"> \\\r\n            <span class=\"ttsSpeakerEnable\"></span> \\\r\n            <span class=\"ttsSpeakerDisable\"></span> \\\r\n            <span style=\"display:none;\"><audio id=\"ttspeaker\" controls=\"\" autoplay=\"\" name=\"media\"><source src=\"\" type=\"audio/wav\"></audio></span>\\\r\n        </button> \\\r\n    </div> ';\r\n        return textToSpeechTemplate\r\n    }\r\n    \r\n    \r\n    bindEvents() {\r\n        let me: any = this;\r\n        let $ = me.hostInstance.$;\r\n        $(me.pickerHTML).on('click', '.ttspeaker', function (event: any) {\r\n            if(me.OnSpeakerButtonClick){\r\n                me.OnSpeakerButtonClick();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default BaseTTS;","__webpack_require__.h = () => (\"3b64199de54790bcf14b\")"],"names":[],"sourceRoot":""}